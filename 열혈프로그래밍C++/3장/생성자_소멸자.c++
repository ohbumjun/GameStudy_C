/* 생성자 특징 2 */

// 객체를 생성과 동시에 초기화 한다
// 객체 생성시 딱 한번 호출된다. 

/* 멤버 이니셜라이저 특징 3 */
// - 이니셜라이저를 이용하면
// 선언과 동시에 초기화가 이루어지는 형태로 바이너리 코드가 생성된다.

// - const 멤버 변수를 초기화 할 수 있다
// ( const 멤버 변수는 선언과 동시에 초기화가 일어나야 하기 때문이다)
// ( 반대로 말하면, 이니셜라이저를 통해서만 const 멤버변수가 초기화 된다.)

// - 참조자도 이니셜라이저를 통해서 초기화 될 수 있다.
// (참조자도 마찬가지로, 선언과 동시에 초기화 되어야 한다)

class Hi
{
private :
    const int num1;
public :
    Hi(int n1) : num1(n1){}
    /*
    num1(n1) ? --- 
    int num1;
    num1 = n1;

    선언과 초기화를 각각 별도의 문장에서 진행하는 형태로
    바이너리 코드가 생성된다. 
    /*/
};
